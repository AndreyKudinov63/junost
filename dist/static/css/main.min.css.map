{"version":3,"sources":["helpers/_mixins.scss","base/_font-face.scss","base/_reset.scss","main.css","base/_general.scss","helpers/_vars.scss","ui/_loader.scss","layout/_grid.scss","base/_grid.scss","../../node_modules/bourbon-neat/core/neat/mixins/_grid-media.scss","../../node_modules/bourbon-neat/core/neat/mixins/_grid-container.scss","../../node_modules/bourbon-neat/core/neat/mixins/_grid-collapse.scss","layout/_header.scss","blocks/main.scss"],"names":[],"mappings":"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","file":"main.min.css","sourcesContent":["// Font face\r\n@mixin font-face($name, $subname, $path, $weight: normal, $style: normal, $exts: woff2 woff ttf eot) {\r\n\t$src: null;\r\n\r\n\t$extmods: (\r\n\t\teot: \"?#iefix\"\r\n\t);\r\n\r\n\t$formats: (\r\n\t\tttf: \"truetype\"\r\n\t);\r\n\r\n\t@each $ext in $exts {\r\n\t\t$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\r\n\t\t$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\r\n\t\t$src: append($src, url(quote($path + \"/\" + $name + \"-\" + $subname + \".\" + $extmod)) format(quote($format)), comma);\r\n\t}\r\n\r\n\t@font-face {\r\n\t\tfont-family: quote($name);\r\n\t\tsrc: url(quote($path + \"/\" + $name + \"-\" + $subname + \".eot\"));\r\n\t\tsrc: $src;\r\n\t\tfont-weight: $weight;\r\n\t\tfont-style: $style;\r\n\t}\r\n}\r\n\r\n// Placeholder mixin\r\n@mixin placeholder {\r\n\t&.placeholder { @content; }\r\n\t&:-moz-placeholder { @content; }\r\n\t&::-moz-placeholder { @content; }\r\n\t&:-ms-input-placeholder { @content; }\r\n\t&::-webkit-input-placeholder { @content; }\r\n}\r\n\r\n// Before & after absolute\r\n@mixin pseudo {\r\n\tcontent: '';\r\n\tposition: absolute;\r\n}\r\n","@include font-face(ProximaNova, Bold, '../fonts/ProximaNova', 700, bold);\r\n@include font-face(ProximaNova, Regular, '../fonts/ProximaNova', 400, normal);\r\n","html,\r\nbody,\r\ndiv,\r\nspan,\r\napplet,\r\nobject,\r\niframe,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6,\r\np,\r\nblockquote,\r\npre,\r\na,\r\nabbr,\r\nacronym,\r\naddress,\r\nbig,\r\ncite,\r\ncode,\r\ndel,\r\ndfn,\r\nem,\r\nimg,\r\nins,\r\nkbd,\r\nq,\r\ns,\r\nsamp,\r\nsmall,\r\nstrike,\r\nstrong,\r\nsub,\r\nsup,\r\ntt,\r\nvar,\r\nb,\r\nu,\r\ni,\r\ncenter,\r\ndl,\r\ndt,\r\ndd,\r\nol,\r\nul,\r\nli,\r\nfieldset,\r\nform,\r\nlabel,\r\nlegend,\r\ntable,\r\ncaption,\r\ntbody,\r\ntfoot,\r\nthead,\r\ntr,\r\nth,\r\ntd,\r\narticle,\r\naside,\r\ncanvas,\r\ndetails,\r\nembed,\r\nfigure,\r\nfigcaption,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmenu,\r\nnav,\r\noutput,\r\nruby,\r\nsection,\r\nsummary,\r\ntime,\r\nmark,\r\naudio,\r\nvideo {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  // outline: 0;\r\n  outline-color: rgb(77, 144, 254);\r\n  font-size: 100%;\r\n  font-weight: inherit;\r\n  font-style: inherit;\r\n  font: inherit;\r\n  color: inherit;\r\n  vertical-align: baseline;\r\n}\r\n\r\narticle,\r\naside,\r\ndetails,\r\nfigcaption,\r\nfigure,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmenu,\r\nnav,\r\nsection {\r\n  display: block;\r\n}\r\n\r\nbody {\r\n  line-height: 1;\r\n}\r\n\r\nol,\r\nul {\r\n  list-style: none;\r\n}\r\n\r\nblockquote,\r\nq {\r\n  quotes: none;\r\n}\r\n\r\nblockquote:before,\r\nblockquote:after,\r\nq:before,\r\nq:after {\r\n  content: '';\r\n  content: none;\r\n}\r\n\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n\r\ninput,\r\ntextarea,\r\nbutton {\r\n  border-radius: 0;\r\n}\r\n\r\na,\r\na:hover,\r\na:active,\r\na:visited,\r\ninput,\r\ninput:hover,\r\ninput:active,\r\ntextarea,\r\ntextarea:hover,\r\ntextarea:active,\r\nbutton,\r\nbutton:hover,\r\nbutton:active {\r\n  // outline: 0;\r\n  outline-color: rgb(77, 144, 254);\r\n  text-decoration: none;\r\n}\r\n\r\na:focus,\r\ninput:focus,\r\ntextarea:focus,\r\nbutton:focus {\r\n  // outline: 0;\r\n  outline-color: rgb(77, 144, 254);\r\n}\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbutton {\r\n  padding: 0;\r\n  border: none;\r\n  background: none;\r\n  box-shadow: none;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Normalize */\r\n\r\nhtml {\r\n  line-height: 1.15;\r\n  -webkit-text-size-adjust: 100%;\r\n}\r\n\r\npre {\r\n  font-family: monospace, monospace;\r\n  font-size: 1em;\r\n}\r\n\r\na {\r\n  background-color: transparent;\r\n}\r\n\r\nabbr[title] {\r\n  border-bottom: none;\r\n  text-decoration: none;\r\n}\r\n\r\nb,\r\nstrong {\r\n  font-weight: bolder;\r\n}\r\n\r\ncode,\r\nkbd,\r\nsamp {\r\n  font-family: monospace, monospace;\r\n  font-size: 1em;\r\n}\r\n\r\nsmall {\r\n  font-size: 80%;\r\n}\r\n\r\nsub,\r\nsup {\r\n  font-size: 75%;\r\n  line-height: 0;\r\n  position: relative;\r\n  vertical-align: baseline;\r\n}\r\n\r\nsub {\r\n  bottom: -0.25em;\r\n}\r\n\r\nsup {\r\n  top: -0.5em;\r\n}\r\n\r\nimg {\r\n  border-style: none;\r\n}\r\n\r\nbutton,\r\ninput,\r\noptgroup,\r\nselect,\r\ntextarea {\r\n  line-height: 1.15;\r\n}\r\n\r\nbutton,\r\ninput {\r\n  overflow: visible;\r\n}\r\n\r\nbutton,\r\nselect {\r\n  text-transform: none;\r\n}\r\n\r\nbutton,\r\n[type='button'],\r\n[type='reset'],\r\n[type='submit'] {\r\n  -webkit-appearance: button;\r\n}\r\n\r\nbutton::-moz-focus-inner,\r\n[type='button']::-moz-focus-inner,\r\n[type='reset']::-moz-focus-inner,\r\n[type='submit']::-moz-focus-inner {\r\n  border-style: none;\r\n  padding: 0;\r\n}\r\n\r\nbutton:-moz-focusring,\r\n[type='button']:-moz-focusring,\r\n[type='reset']:-moz-focusring,\r\n[type='submit']:-moz-focusring {\r\n  outline: 1px dotted ButtonText;\r\n}\r\n\r\nfieldset {\r\n  padding: 0.35em 0.75em 0.625em;\r\n}\r\n\r\nlegend {\r\n  box-sizing: border-box;\r\n  color: inherit;\r\n  display: table;\r\n  max-width: 100%;\r\n  padding: 0;\r\n  white-space: normal;\r\n}\r\n\r\nprogress {\r\n  vertical-align: baseline;\r\n}\r\n\r\ntextarea {\r\n  overflow: auto;\r\n}\r\n\r\n[type='number']::-webkit-inner-spin-button,\r\n[type='number']::-webkit-outer-spin-button {\r\n  height: auto;\r\n}\r\n\r\n[type='search'] {\r\n  -webkit-appearance: textfield;\r\n  outline-offset: -2px;\r\n}\r\n\r\n[type='search']::-webkit-search-decoration {\r\n  -webkit-appearance: none;\r\n}\r\n\r\n::-webkit-file-upload-button {\r\n  -webkit-appearance: button;\r\n  font: inherit;\r\n}\r\n\r\ndetails {\r\n  display: block;\r\n}\r\n\r\nsummary {\r\n  display: list-item;\r\n}\r\n\r\ntemplate {\r\n  display: none;\r\n}\r\n\r\n[hidden] {\r\n  display: none;\r\n}\r\n","@font-face {\n  font-family: \"ProximaNova\";\n  src: url(\"../fonts/ProximaNova/ProximaNova-Bold.eot\");\n  src: url(\"../fonts/ProximaNova/ProximaNova-Bold.woff2\") format(\"woff2\"), url(\"../fonts/ProximaNova/ProximaNova-Bold.woff\") format(\"woff\"), url(\"../fonts/ProximaNova/ProximaNova-Bold.ttf\") format(\"truetype\"), url(\"../fonts/ProximaNova/ProximaNova-Bold.eot?#iefix\") format(\"eot\");\n  font-weight: 700;\n  font-style: bold; }\n\n@font-face {\n  font-family: \"ProximaNova\";\n  src: url(\"../fonts/ProximaNova/ProximaNova-Regular.eot\");\n  src: url(\"../fonts/ProximaNova/ProximaNova-Regular.woff2\") format(\"woff2\"), url(\"../fonts/ProximaNova/ProximaNova-Regular.woff\") format(\"woff\"), url(\"../fonts/ProximaNova/ProximaNova-Regular.ttf\") format(\"truetype\"), url(\"../fonts/ProximaNova/ProximaNova-Regular.eot?#iefix\") format(\"eot\");\n  font-weight: 400;\n  font-style: normal; }\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline-color: #4d90fe;\n  font-size: 100%;\n  font-weight: inherit;\n  font-style: inherit;\n  font: inherit;\n  color: inherit;\n  vertical-align: baseline; }\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block; }\n\nbody {\n  line-height: 1; }\n\nol,\nul {\n  list-style: none; }\n\nblockquote,\nq {\n  quotes: none; }\n\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: '';\n  content: none; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\ninput,\ntextarea,\nbutton {\n  border-radius: 0; }\n\na,\na:hover,\na:active,\na:visited,\ninput,\ninput:hover,\ninput:active,\ntextarea,\ntextarea:hover,\ntextarea:active,\nbutton,\nbutton:hover,\nbutton:active {\n  outline-color: #4d90fe;\n  text-decoration: none; }\n\na:focus,\ninput:focus,\ntextarea:focus,\nbutton:focus {\n  outline-color: #4d90fe; }\n\n* {\n  box-sizing: border-box; }\n\nbutton {\n  padding: 0;\n  border: none;\n  background: none;\n  box-shadow: none;\n  cursor: pointer; }\n\n/* Normalize */\nhtml {\n  line-height: 1.15;\n  -webkit-text-size-adjust: 100%; }\n\npre {\n  font-family: monospace, monospace;\n  font-size: 1em; }\n\na {\n  background-color: transparent; }\n\nabbr[title] {\n  border-bottom: none;\n  text-decoration: none; }\n\nb,\nstrong {\n  font-weight: bolder; }\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em; }\n\nsmall {\n  font-size: 80%; }\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\nsub {\n  bottom: -0.25em; }\n\nsup {\n  top: -0.5em; }\n\nimg {\n  border-style: none; }\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  line-height: 1.15; }\n\nbutton,\ninput {\n  overflow: visible; }\n\nbutton,\nselect {\n  text-transform: none; }\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n  -webkit-appearance: button; }\n\nbutton::-moz-focus-inner,\n[type='button']::-moz-focus-inner,\n[type='reset']::-moz-focus-inner,\n[type='submit']::-moz-focus-inner {\n  border-style: none;\n  padding: 0; }\n\nbutton:-moz-focusring,\n[type='button']:-moz-focusring,\n[type='reset']:-moz-focusring,\n[type='submit']:-moz-focusring {\n  outline: 1px dotted ButtonText; }\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em; }\n\nlegend {\n  box-sizing: border-box;\n  color: inherit;\n  display: table;\n  max-width: 100%;\n  padding: 0;\n  white-space: normal; }\n\nprogress {\n  vertical-align: baseline; }\n\ntextarea {\n  overflow: auto; }\n\n[type='number']::-webkit-inner-spin-button,\n[type='number']::-webkit-outer-spin-button {\n  height: auto; }\n\n[type='search'] {\n  -webkit-appearance: textfield;\n  outline-offset: -2px; }\n\n[type='search']::-webkit-search-decoration {\n  -webkit-appearance: none; }\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  font: inherit; }\n\ndetails {\n  display: block; }\n\nsummary {\n  display: list-item; }\n\ntemplate {\n  display: none; }\n\n[hidden] {\n  display: none; }\n\n* {\n  box-sizing: border-box;\n  font-family: \"ProximaNova\", sans-serif; }\n\n.loader {\n  width: 30px;\n  height: 30px;\n  border: 3px solid;\n  border-top: 3px solid transparent;\n  border-radius: 30px;\n  margin: 50px auto;\n  color: #315efb;\n  position: relative;\n  animation: rotate .4s linear infinite; }\n\n@keyframes rotate {\n  from {\n    transform: rotate(0); }\n  to {\n    transform: rotate(360deg); } }\n\n.container {\n  width: 100%;\n  padding: 0 22px;\n  margin: 0 auto;\n  position: relative; }\n  @media only screen and (min-width: 768px) {\n    .container {\n      width: 710px;\n      padding: 0 10px; } }\n  @media only screen and (min-width: 1024px) {\n    .container {\n      width: 964px;\n      padding: 0 10px; } }\n  @media only screen and (min-width: 1440px) {\n    .container {\n      width: 1285px;\n      padding: 0 10px; } }\n\n.row::after {\n  clear: both;\n  content: \"\";\n  display: block; }\n\n@media only screen and (min-width: 1px) {\n  .row {\n    margin-left: -16px;\n    margin-right: -16px;\n    width: calc(100% + 32px); } }\n\n@media only screen and (min-width: 768px) {\n  .row {\n    margin-left: -20px;\n    margin-right: -20px;\n    width: calc(100% + 40px); } }\n\n@media only screen and (min-width: 1024px) {\n  .row {\n    margin-left: -20px;\n    margin-right: -20px;\n    width: calc(100% + 40px); } }\n\n@media only screen and (min-width: 1440px) {\n  .row {\n    margin-left: -20px;\n    margin-right: -20px;\n    width: calc(100% + 40px); } }\n\n.header__title {\n  font-weight: bold; }\n  .header__title span {\n    color: #315efb; }\n\n.main {\n  font-family: \"ProximaNova\", sans-serif; }\n","* {\r\n\tbox-sizing: border-box;\r\n\tfont-family: $f-base;\r\n}","// Fonts\r\n$f-base: 'ProximaNova', sans-serif;\r\n\r\n// Colors\r\n$c-primary: #315efb;\r\n$c-grey: #e3eaf0;\r\n$c-grey-light: #f4f6f9;\r\n$c-yellow: #fce463;\r\n$c-black: #262626;\r\n",".loader {\r\n\twidth: 30px;\r\n  height: 30px;\r\n  border: 3px solid;\r\n  border-top: 3px solid transparent;\r\n  border-radius: 30px;\r\n  margin: 50px auto;\r\n  color: $c-primary;\r\n  position: relative;\r\n  animation: rotate .4s linear infinite;\r\n}\r\n\r\n@keyframes rotate{\r\n\tfrom{\r\n\t\ttransform:rotate(0);\r\n\t}\r\n\tto {\r\n\t\ttransform:rotate(360deg);\r\n\t}\r\n}",".container {\r\n  width: $xs-content;\r\n  padding: 0 22px;\r\n  margin: 0 auto;\r\n  position: relative;\r\n\r\n  // media\r\n  @include grid-media($md-grid) {\r\n    width: $md-content + $md-grid-gutter;\r\n    padding: 0 $md-grid-gutter/2;\r\n  }\r\n\r\n  @include grid-media($lg-grid) {\r\n    width: $lg-content + $lg-grid-gutter;\r\n    padding: 0 $lg-grid-gutter/2;\r\n  }\r\n\r\n  @include grid-media($xl-grid) {\r\n    width: $xl-content + $xl-grid-gutter;\r\n    padding: 0 $xl-grid-gutter/2;\r\n  }\r\n}\r\n\r\n.row {\r\n  @include grid-container;\r\n\r\n  //media\r\n  @include grid-media($xs-grid) {\r\n    @include grid-collapse;\r\n  }\r\n\r\n  @include grid-media($md-grid) {\r\n    @include grid-collapse;\r\n  }\r\n\r\n  @include grid-media($lg-grid) {\r\n    @include grid-collapse;\r\n  }\r\n\r\n  @include grid-media($xl-grid) {\r\n    @include grid-collapse;\r\n  }\r\n}\r\n","// Media\r\n$xs-media: 1px;\r\n$md-media: 768px;\r\n$lg-media: 1024px;\r\n$xl-media: 1440px;\r\n\r\n// Gutter\r\n$xs-grid-gutter: 16px;\r\n$md-grid-gutter: 20px;\r\n$lg-grid-gutter: 20px;\r\n$xl-grid-gutter: 20px;\r\n\r\n// Content width\r\n$xs-content: 100%;\r\n$md-content: 690px;\r\n$lg-content: 944px;\r\n$xl-content: 1265px;\r\n\r\n// Grid\r\n$xs-grid: (\r\n  columns: 4,\r\n  gutter: $xs-grid-gutter,\r\n  media: $xs-media,\r\n);\r\n\r\n$md-grid: (\r\n  columns: 12,\r\n  gutter: $md-grid-gutter,\r\n  media: $md-media,\r\n);\r\n\r\n$lg-grid: (\r\n  columns: 10,\r\n  gutter: $lg-grid-gutter,\r\n  media: $lg-media,\r\n);\r\n\r\n$xl-grid: (\r\n  columns: 12,\r\n  gutter: $xl-grid-gutter,\r\n  media: $xl-media,\r\n);\r\n","@charset \"UTF-8\";\n/// `grid-media` allows you to change your layout based on a media query.\n/// For example, an object can span 3 columns on small screens and 6 columns\n/// on large screens.\n///\n/// You can take this a step further and set different grid attributes like\n/// gutter size and total column count for each media query. So, for example,\n/// you can have a `1rem` gutter on small screens, and a `2rem` gutter on large\n/// screens.\n///\n/// @group features\n///\n/// @name Grid media\n///\n/// @argument {map} $grid\n///   The grid or grids to be used within the scope of the block.\n///   These grids should include the `media` property to determine the expression\n///   for the media query.\n///\n/// @content\n///   Grid media will temporarily override the default grid with the attributes\n///   of the custom grids. When `grid-media` is given a custom grid, it will\n///   apply that grid to any of other Neat mixins within the `grid-media` block\n///   (`{…}`). Once the mixin block has ended the default grid will revert to\n///   its original state as defined by `$neat-grid`. This allows for different\n///   gutter width and column count based on screen size or other properties.\n///\n///   If multiple grids are passed in to `grid-media`, it will loop through the\n///   contents of the block, quickly allowing you to apply multiple grids in a\n///   single mixin.\n///\n/// @example scss\n///   $custom-neat-grid: (\n///     columns: 12,\n///     gutter: 50px,\n///     media: \"screen and (max-width: 999px)\",\n///   );\n///\n///   $custom-neat-grid-2: (\n///     columns: 12,\n///     gutter: 70px,\n///     media: 1000px,\n///   );\n///\n///   .element {\n///     @include grid-column(3);\n///\n///     @include grid-media($custom-neat-grid, $custom-neat-grid-2){\n///       @include grid-column(6);\n///     }\n///   }\n///\n/// @example css\n///   .element {\n///     width: calc(25% - 25px);\n///     float: left;\n///     margin-left: 20px;\n///   }\n///\n///   @media only screen and (max-width: 999px) {\n///     .element {\n///       width: calc(50% - 75px);\n///       float: left;\n///       margin-left: 50px;\n///     }\n///   }\n///\n///   @media only screen and (min-width: 1000px) {\n///     .element {\n///       width: calc(50% - 75px);\n///       float: left;\n///       margin-left: 70px;\n///     }\n///   }\n\n@mixin grid-media($grids...) {\n  @each $_grid in $grids {\n    $_media: _retrieve-neat-setting($_grid, media);\n    $_query: _neat-parse-media($_media);\n\n    @media #{$_query} {\n      $_default-neat-grid: $neat-grid;\n      $neat-grid: map-merge($neat-grid, $_grid) !global;\n      @content;\n      $neat-grid: $_default-neat-grid !global;\n    }\n  }\n}\n","@charset \"UTF-8\";\n/// Creates a grid container with clearfix.\n///\n/// @group features\n///\n/// @name Grid container\n///\n/// @example scss\n///   .element {\n///     @include grid-container;\n///   }\n///\n/// @example css\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: block;\n///   }\n\n@mixin grid-container($grid: $neat-grid) {\n  @if $grid != $neat-grid {\n    @warn \"`grid-container` does not use grid properties. \" +\n          \"Custom grids do not need to be passed in to this mixin.\";\n  }\n\n  &::after {\n    clear: both;\n    content: \"\";\n    display: block;\n  }\n}\n","@charset \"UTF-8\";\n/// Creates collapsed grid object that consumes the gutters of its container,\n/// for use in nested layouts.\n///\n/// @group features\n///\n/// @name Grid collapse\n///\n/// @argument {map} $grid [$neat-grid]\n///   The grid to be used to generate the collapsed container.\n///   By default, the global `$neat-grid` will be used.\n///\n/// @example scss\n///   .element {\n///     @include grid-collapse;\n///   }\n///\n/// @example css\n///   .element {\n///     margin-left: -20px;\n///     margin-right: -20px;\n///     width: calc(100% + 40px);\n///   }\n\n@mixin grid-collapse($grid: $neat-grid) {\n  $_grid-gutter: _retrieve-neat-setting($grid, gutter);\n\n  @if unit($_grid-gutter) == \"%\" {\n    @warn \"`grid-collapse` is not compatible with percentage based gutters.\";\n  }\n\n  margin-#{_neat-float-direction($grid)}: -($_grid-gutter);\n  margin-#{_neat-opposite-direction($grid)}: -($_grid-gutter);\n  width: calc(100% + #{($_grid-gutter * 2)});\n}\n",".header {\r\n  &__title {\r\n    font-weight: bold;\r\n\r\n    span {\r\n      color: $c-primary;\r\n    }\r\n  }\r\n}\r\n",".main {\r\n\tfont-family: $f-base;\r\n}"]}